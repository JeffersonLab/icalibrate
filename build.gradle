plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'com.diffplug.spotless' version '7.2.1'
}

description = "Ion chamber calibration application"
group = 'org.jlab'
version = new File("${projectDir}/VERSION").text.trim()
ext.releaseDate = new Date().format('MMM dd yyyy')

tasks.withType(JavaCompile).configureEach {
    options.release = 11
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.glassfish:javax.json:1.1.4',
                   'org.jfree:jfreechart:1.0.19',
                   'org.epics:jca:2.4.5',
                   'org.apache.commons:commons-math3:3.6.1',
                   'org.jlab:jlog:5.1.0'

    testImplementation 'junit:junit:4.12'
}
application {
    mainClass.set('org.jlab.icalibrate.ICalibrateApp')
    applicationDefaultJvmArgs = ['-DCAJ_STRIP_HOSTNAME=CAJ_STRIP_HOSTNAME']
}
startScripts {
    classpath += files('config')

    // https://discuss.gradle.org/t/classpath-in-application-plugin-is-building-always-relative-to-app-home-lib-directory/2012
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
}
run {
    classpath += files('config')
}
distributions {
    main {
        contents {
            into('config') {
                from 'config'
            }
        }
    }
}
processResources {
    filesMatching('release.properties') {
        filter {
            String line -> line.replaceAll("@VERSION@", version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
    }
}
javadoc {
    exclude 'org/jlab/icalibrate/swing/generated/**'
    options.overview = "src/main/java/overview.html"
    options.source = 11
    options.with {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api/', 'https://www.javadoc.io/doc/org.epics/jca/2.4.5/', 'https://www.javadoc.io/doc/org.epics/caj/1.1.5/', 'https://www.jfree.org/jfreechart/api/javadoc/'
    }
}
tasks.register('testRun', JavaExec) {
    dependsOn build
    classpath = files('src/test/resources')
    classpath += sourceSets.main.runtimeClasspath
    mainClass.set('org.jlab.icalibrate.ICalibrateApp')
    systemProperties = [
            'java.util.logging.config.file': 'logging.properties'
    ]
}
spotless {
    java {
        targetExclude("**/generated/**/*.java")
        googleJavaFormat()
    }
}